##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [2.29.1] date: [Thu May 07 21:38:47 JST 2020]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = ADC_DMA


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#########################################
# paths
#######################################
# Build path
BUILD_DIR = objs

######################################
# source
######################################
# C sources
C_SOURCES = main.c
C_SOURCES += usb_device.c
C_SOURCES += usbd_conf.c
C_SOURCES += usbd_desc.c
C_SOURCES += usbd_cdc_if.c
C_SOURCES += stm32f1xx_it.c
C_SOURCES += stm32f1xx_hal_msp.c
C_SOURCES += stm32f1xx_hal_gpio_ex.c
C_SOURCES += stm32f1xx_hal_pcd.c
C_SOURCES += stm32f1xx_hal_pcd_ex.c
C_SOURCES += stm32f1xx_ll_usb.c
C_SOURCES += stm32f1xx_hal_adc.c
C_SOURCES += stm32f1xx_hal_adc_ex.c
C_SOURCES += stm32f1xx_hal_tim.c
C_SOURCES += stm32f1xx_hal_tim_ex.c
C_SOURCES += stm32f1xx_hal.c
C_SOURCES += stm32f1xx_hal_rcc.c
C_SOURCES += stm32f1xx_hal_rcc_ex.c
C_SOURCES += stm32f1xx_hal_gpio.c
C_SOURCES += stm32f1xx_hal_dma.c
C_SOURCES += stm32f1xx_hal_cortex.c
C_SOURCES += stm32f1xx_hal_pwr.c
C_SOURCES += stm32f1xx_hal_flash.c
C_SOURCES += stm32f1xx_hal_flash_ex.c
C_SOURCES += system_stm32f1xx.c
C_SOURCES += usbd_core.c
C_SOURCES += usbd_ctlreq.c
C_SOURCES += usbd_ioreq.c
C_SOURCES += usbd_cdc.c  

# ASM sources
ASM_SOURCES = startup_stm32f103xb.s

#IMPORTANT! Change this to your library path installation!:
LIBROOT=/home/onat/elektronik/ARM/STM32_CUBEMX/Repository/STM32Cube_FW_F1_V1.6.1$

#Tools:
CC = arm-none-eabi-gcc
AS = arm-none-eabi-gcc -x assembler-with-cpp
CP = arm-none-eabi-objcopy
SZ = arm-none-eabi-size

HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m3

# fpu
# NONE for Cortex-M0/M0+/M3

# float-abi


# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS = -DUSE_HAL_DRIVER -DSTM32F103xB
# See: STM32_CUBEMX/Repository/STM32Cube_FW_F1_V1.6.1/Drivers/CMSIS/Device/ST
#    /STM32F1xx/Include/stm32f1xx.h for the correct processor to include.

# AS includes
AS_INCLUDES = 

C_INCLUDES = -IInc
C_INCLUDES += -I$(LIBROOT)/Drivers/STM32F1xx_HAL_Driver/Inc
C_INCLUDES += -I$(LIBROOT)/Drivers/STM32F1xx_HAL_Driver/Inc/Legacy 
C_INCLUDES += -I$(LIBROOT)/Middlewares/ST/STM32_USB_Device_Library/Core/Inc 
C_INCLUDES +=-I$(LIBROOT)/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc 
C_INCLUDES += -I$(LIBROOT)/Drivers/CMSIS/Device/ST/STM32F1xx/Include 
C_INCLUDES += -I$(LIBROOT)/Drivers/CMSIS/Include

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
# Add assembly listing of each compiled file to the build dir:
CFLAGS += -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst))
# -Wa: pass options to assembler.
#-alms specifies:
# -a: turn on listings
# -d: omit debugging directives; n: omit forms processing
# -h: include high-level source
# -l: include assembly
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# linker script:
LDSCRIPT = STM32F103C8Tx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections
LDFLAGS += -u _printf_float  # sprintf did not print floats without this.

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
#vpath %.c $(sort $(dir $(C_SOURCES)))
vpath %.c ./Src
vpath %.c $(LIBROOT)/Drivers/STM32F1xx_HAL_Driver/Src/
vpath %.c $(LIBROOT)/Middlewares/ST/STM32_USB_Device_Library/Core/Src/
vpath %.c $(LIBROOT)/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/

# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
#vpath %.s $(sort $(dir $(ASM_SOURCES)))
vpath %.s $(LIBROOT)/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc/

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) $< -o $@

# Objects from assembly sources:
$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@

$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	

$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
#AO: CubeMX erases all files in the output directory. That is too brutal.
#AO:   I prefer to erase only those that were created by this,=.
clean:
	@rm -f $(OBJECTS) $(OBJECTS:.o=.d) $(OBJECTS:.o=.lst) $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).map

#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# flash the processor:
jflash: $(BUILD_DIR)/$(TARGET).bin
	st-flash  write $(BUILD_DIR)/$(TARGET).bin  0x8000000


# *** EOF ***
